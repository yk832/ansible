---
- name: Add cert-manager helm repository
  kubernetes.core.helm_repository:
    name: "{{ cert_manager_repo_name }}"
    repo_url: "{{ cert_manager_repo_url }}"
  become_user: "{{ ansible_user }}"
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"

- name: Create cert-manager namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ cert_manager_namespace }}"
  become_user: "{{ ansible_user }}"
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"

- name: Install cert-manager
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: "{{ cert_manager_repo_name }}/cert-manager"
    release_namespace: "{{ cert_manager_namespace }}"
    create_namespace: yes
    values: "{{ cert_manager_values }}"
  become_user: "{{ ansible_user }}"
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"

- name: Wait for cert-manager to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: cert-manager
    namespace: "{{ cert_manager_namespace }}"
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 300
  become_user: "{{ ansible_user }}"
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"

- name: Create ClusterIssuer for Let's Encrypt
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: "{{ cluster_issuer_name }}"
      spec:
        acme:
          server: "{{ letsencrypt_server }}"
          email: "{{ letsencrypt_email }}"
          privateKeySecretRef:
            name: "{{ cluster_issuer_name }}"
          solvers:
          - http01:
              ingress:
                class: nginx
  become_user: "{{ ansible_user }}"
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"