---
- name: Update package cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install PostgreSQL packages
  ansible.builtin.package:
    name:
      - postgresql
      - postgresql-contrib
      - python3-psycopg2
    state: present

- name: Ensure PostgreSQL service is running
  ansible.builtin.systemd:
    name: postgresql
    state: started
    enabled: yes

- name: Find PostgreSQL version directory
  ansible.builtin.find:
    paths: /etc/postgresql
    file_type: directory
    patterns: "*"
  register: pg_version_dirs

- name: Set PostgreSQL version from installed directory
  ansible.builtin.set_fact:
    postgresql_version: "{{ pg_version_dirs.files[0].path | basename }}"
  when: pg_version_dirs.files | length > 0

- name: Configure PostgreSQL
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
    backup: yes
  notify: restart postgresql

- name: Configure pg_hba.conf
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"
    backup: yes
  notify: restart postgresql

- name: Ensure PostgreSQL is started and enabled
  ansible.builtin.systemd:
    name: postgresql
    state: started
    enabled: yes

- name: Create PostgreSQL databases
  community.postgresql.postgresql_db:
    name: "{{ item.name }}"
    state: present
  become_user: postgres
  loop: "{{ postgresql_databases }}"

- name: Create PostgreSQL users
  community.postgresql.postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.role_attr_flags }}"
    state: present
  become_user: postgres
  loop: "{{ postgresql_users }}"